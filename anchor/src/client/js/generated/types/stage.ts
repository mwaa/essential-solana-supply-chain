/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from 'gill';

export type Stage = {
  name: string;
  owner: Option<Address>;
  completed: boolean;
};

export type StageArgs = {
  name: string;
  owner: OptionOrNullable<Address>;
  completed: boolean;
};

export function getStageEncoder(): Encoder<StageArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['owner', getOptionEncoder(getAddressEncoder())],
    ['completed', getBooleanEncoder()],
  ]);
}

export function getStageDecoder(): Decoder<Stage> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['owner', getOptionDecoder(getAddressDecoder())],
    ['completed', getBooleanDecoder()],
  ]);
}

export function getStageCodec(): Codec<StageArgs, Stage> {
  return combineCodec(getStageEncoder(), getStageDecoder());
}
